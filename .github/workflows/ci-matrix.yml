name: CI (matrix by lab)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  per-lab:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lab:
          - infra-as-code-aws
          - ci-cd-pipeline-demo
          - k8s-observability-stack
          - aiops-log-analyzer
          - aws-bedrock-incident-summarizer
          - gcp-vertex-release-notes
          - azure-openai-incident-helper
          - oci-genai-cost-triage

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show selected lab
        run: echo "Running checks for ${{ matrix.lab }}"

      # ---------- Terraform (fmt + validate) ----------
      - name: Setup Terraform
        if: ${{ hashFiles(format('{0}/**/*.tf', matrix.lab)) != '' }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform fmt (check)
        if: ${{ hashFiles(format('{0}/**/*.tf', matrix.lab)) != '' }}
        working-directory: ${{ matrix.lab }}
        run: terraform fmt -check -recursive

      - name: Terraform init + validate
        if: ${{ hashFiles(format('{0}/**/*.tf', matrix.lab)) != '' }}
        working-directory: ${{ matrix.lab }}
        run: |
          terraform init -backend=false
          terraform validate

      # ---------- Python (ruff + pytest) ----------
      - name: Setup Python
        if: ${{ hashFiles(format('{0}/**/*.py', matrix.lab)) != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install ruff + pytest
        if: ${{ hashFiles(format('{0}/**/*.py', matrix.lab)) != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest

      - name: Lint (ruff)
        if: ${{ hashFiles(format('{0}/**/*.py', matrix.lab)) != '' }}
        working-directory: ${{ matrix.lab }}
        run: ruff check .

      - name: Run tests (pytest)
        if: ${{ hashFiles(format('{0}/**/*test*.py', matrix.lab)) != '' }}
        working-directory: ${{ matrix.lab }}
        run: pytest -q
